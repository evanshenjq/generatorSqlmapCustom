<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zstu.sjq.dao.BsBookMapper" >
  <resultMap id="BaseResultMap" type="zstu.sjq.bean.BsBook" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="publish" property="publish" jdbcType="VARCHAR" />
    <result column="descr" property="descr" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="num" property="num" jdbcType="BIGINT" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="cat_id" property="catId" jdbcType="BIGINT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="score" property="score" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, publish, descr, price, num, image, status, cat_id, created, updated, score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zstu.sjq.bean.BsBookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bs_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bs_book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bs_book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="zstu.sjq.bean.BsBookExample" >
    delete from bs_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zstu.sjq.bean.BsBook" >
    insert into bs_book (id, name, publish, 
      descr, price, num, image, 
      status, cat_id, created, 
      updated, score)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{publish,jdbcType=VARCHAR}, 
      #{descr,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{num,jdbcType=BIGINT}, #{image,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{catId,jdbcType=BIGINT}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{score,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="zstu.sjq.bean.BsBook" >
    insert into bs_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="publish != null" >
        publish,
      </if>
      <if test="descr != null" >
        descr,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="catId != null" >
        cat_id,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="descr != null" >
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="num != null" >
        #{num,jdbcType=BIGINT},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="catId != null" >
        #{catId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zstu.sjq.bean.BsBookExample" resultType="java.lang.Integer" >
    select count(*) from bs_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null" >
        publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.descr != null" >
        descr = #{record.descr,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=BIGINT},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.catId != null" >
        cat_id = #{record.catId,jdbcType=BIGINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_book
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      publish = #{record.publish,jdbcType=VARCHAR},
      descr = #{record.descr,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      num = #{record.num,jdbcType=BIGINT},
      image = #{record.image,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      cat_id = #{record.catId,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      score = #{record.score,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zstu.sjq.bean.BsBook" >
    update bs_book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="descr != null" >
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=BIGINT},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="catId != null" >
        cat_id = #{catId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zstu.sjq.bean.BsBook" >
    update bs_book
    set name = #{name,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      num = #{num,jdbcType=BIGINT},
      image = #{image,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      cat_id = #{catId,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>